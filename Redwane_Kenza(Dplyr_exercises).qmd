---
title: "Dplyr (Exercises)"
author: "Kenza Redwane"
format: 
  html:
    code-fold: true
---

## Elementary Operations

### Exercise 1

```{r}
#| message: false
#| cache: true
here::i_am("git-101-2024/bank.csv")
library(here)
library(dplyr)
```
Question 1: Print the name of the variables
```{r}
library(readr)
bank <- read_delim("/Users/macbookpro/Desktop/Master/Semester One/Data Management and Programming/git-101-2024/bank.csv", ";")
names(bank)  

```

Question 2: Print the dimensions of data table
```{r}
dim(bank)
```

Question 3: Print a summaryof data tabke
```{r}
summary(bank)
```
ðŸ’¡ One of the limitations of this summary is that it doesn't provide us detailed statistical informations about the variables. One of the main issues of it is that having individual elements is not very intuitive.Indeed, it doesn't give us any information about relations between variables (covaariance / correlations). In addition to that, summary output is very limited,it doesn't give us preview about p-value neither statistical test.

## Filtering,  selecting and extracting

### Exercise 2:

Question 1: Extract clients of the bank that are at least 50 years old.
```{r}
bank %>% filter(age>50)
```

Question 2: Print the number of clients who are married and have a secondary level of education.
```{r}
married_secondary<-bank %>%
  filter(marital=='married' & education == 'secondary')
nrow(married_secondary)
```

Question 3:  Print the summary of the subset of clients that are at most 25 and are single or have a tertiary level of education.
```{r}
single <-bank %>%
  filter(age > 25, marital == 'single' & education=='tertiary')
summary(single)
```

### Exercise 3: (Selecting)

Question 1: Compare the results
```{r}
bank %>% select(age) %>% summary()
```
```{r}
bank %>% pull(age) %>% summary()
```
ðŸ’¡ It's the same output that contains same informations, the only difference is that select is vertical which means we are extracting a column and pull returns the content as a simple vector (horizontal)


Question 2: Print a summary of the bank data including only numerical variables.
```{r}
bank %>% select_if(is.numeric) %>% summary()
```

Question 3: Print the median age of the married clients.

```{r}
bank %>% select(marital, age) %>%
  filter(marital== 'married') %>% 
  summarise(median_age=median(age,na.rm = TRUE))
```

## Creating variables

### Exercise 4: (Mutating)

Question 1: Compute a new variable with the difference between the life expectancy of men and women.
```{r}
life_expectancy <- read_delim("~/Desktop/Master/Semester One/Data Management and Programming/git-101-2024/life-expectancy-at-birth-who.csv")
life_expectancy %>%
  mutate(Difference = Male - Female )
```

Question 2: Compute a new variable with the relative difference between the life expectancy of men and women, that is the difference divided by the life expectancy for both sexes.
```{r}
life_expectancy %>%
  mutate(Mean=(Difference = Male - Female)/ `Both sexes`)
```

### Exercise 5: (Mutating with aggregtions)

Question 1: Compute a new variable with the difference between the life expectancy of women and the median life expectancy of women in the whole data frame.
```{r}
life_expectancy %>%
  mutate(Difference = Male - Female )
```

Question 2: Compute a new variable with the difference between the life expectancy of men and the mean life expectancy of men in the whole data frame, normalised by its standard deviation.
```{r}
life_expectancy %>%
  mutate(Normalized_Difference =(Male-mean(Male))/sd(Male)) 

```

Question 3: Compute a boolean variable that is TRUE if the country (for a given year) is atypical with respect to the life expectancy (using the `Both sexes` column. This is the case if the life expectancy is larger than the median value plus twice the standard deviation or if it is small than the median value minus twice the standard deviation.
```{r}
life_expectancy %>%
  mutate(Atypical=`Both sexes`> median(`Both sexes`)+ 2*sd(`Both sexes`< median(`Both sexes`)-2*sd(`Both sexes`)))
```
## Summarising

#### Exercise 6: Summarising

Question 1: Compute the mean and median age of clients in the bank dataset.

```{r}
bank %>% summarise(Mean=mean(age), Median=median(age))
```

Question 2: compute the highest and the lowest life expectancy for each sex for the year 2015 (using the life expectancy at birth data set).
```{r}
life_expectancy %>%
  filter(Year == 2015)%>%
  summarise(Max_male=max(Male),Max_female=max(Female), Min_male=min(Male), Min_female=min(Female))
```
## Grouping

### Exercise 7: Simple Grouping

Question 1: Compute the median age of the clients in the bank data set as a function of their marital status.
```{r}
bank %>% 
  group_by(marital) %>% summarise(Median=median(age))
```

Question 2: Compute the number of clients for each of the professions (job variable) in the bank data set.
```{r}
bank %>%
  group_by(job)%>% summarise(Number_job=n())
```

Question 3:Compute the median, minimum and maximum life expectancy for women as a function of the year.
```{r}
life_expectancy %>%
  group_by(Year) %>% 
  summarise(Median_Female= median(Female), Minimum_Female = min(Female), Maximum_Female = max(Female))
```

Question 4: Find the countries that have an average life expectancy for both sexes over the time period that is smaller than the mean life expectancy minus two times its standard deviation.
```{r}
life_expectancy %>%
  group_by(Country) %>%
  mutate(mean(`Both sexes`)< mean(`Both sexes`)-2*sd(`Both sexes`))

```

### Exercise 8